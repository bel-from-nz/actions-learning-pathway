name: test-env-file-template

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment for workflow'
        type: string
        required: true
      run_apply:
        description: 'Run Apply'
        default: false
        type: boolean
      runner:
        description: 'Runner for workflow'
        type: string
        default: ubuntu-latest
        required: true

defaults:
  run:
    shell: bash

env:
  ENV_FILE: "${{ github.workspace }}/workflow_vars/${{ inputs.environment }}-vars.env"

jobs:
  calltestenv:
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Read Vars file
        if: ${{ hashFiles(env.ENV_FILE) != ''}}
        uses: bel-from-nz/actions-learning-pathway/.github/actions/readenv@main
        with:
          env-file: ${{ env.ENV_FILE }}

      - name: Set Terraform Env Vars
        run: |
          echo "TF_SUBSCRIPTION_ID=${{ env.TF_SUBSCRIPTION_ID == '' &&  env.ARM_SUBSCRIPTION_ID || env.TF_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "TF_STATE_RESOURCE_GROUP=${{ env.TF_STATE_RESOURCE_GROUP }}" >> $GITHUB_ENV
          echo "TF_STATE_BLOB_ACCOUNT=${{ env.TF_STATE_BLOB_ACCOUNT }}" >> $GITHUB_ENV
          echo "TF_STATE_BLOB_CONTAINER=${{ env.TF_STATE_BLOB_CONTAINER == '' && 'tfstate' || env.TF_STATE_BLOB_CONTAINER }}" >> $GITHUB_ENV
          echo "TF_VAR_FILE=${{ env.TF_VAR_FILE == '' && format( '{0}.tfvars', inputs.environment) || env.TF_VAR_FILE  }}" >> $GITHUB_ENV
          echo "TF_BLOB_FILE=${{ env.TF_BLOB_FILE  == '' && format( '{0}-terraform.tfstate', inputs.environment) || env.TF_BLOB_FILE }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ env.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ env.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ env.ARM_TENANT_ID }}" >> $GITHUB_ENV
        env:
          TF_SUBSCRIPTION_ID: ${{ vars.TF_SUBSCRIPTION_ID || env.TF_SUBSCRIPTION_ID }}
          TF_STATE_RESOURCE_GROUP: ${{ vars.TF_STATE_RESOURCE_GROUP || env.TF_STATE_RESOURCE_GROUP }}
          TF_STATE_BLOB_ACCOUNT: ${{ vars.TF_STATE_BLOB_ACCOUNT || env.TF_STATE_BLOB_ACCOUNT }}
          TF_STATE_BLOB_CONTAINER: ${{ vars.TF_STATE_BLOB_CONTAINER || env.TF_STATE_BLOB_CONTAINER }}
          TF_VAR_FILE: ${{ vars.TF_VAR_FILE || env.TF_VAR_FILE }}
          TF_BLOB_FILE: ${{ vars.TF_BLOB_FILE || env.TF_BLOB_FILE }}
          ARM_CLIENT_ID: "${{ vars.ARM_CLIENT_ID }}"
          ARM_SUBSCRIPTION_ID: "${{ vars.ARM_SUBSCRIPTION_ID }}"
          ARM_TENANT_ID: "${{ vars.ARM_TENANT_ID }}"

      - name: Echo Env Vars
        run: |
          echo "Sub: ${{ env.TF_SUBSCRIPTION_ID }}"
          echo "RG: ${{ env.TF_STATE_RESOURCE_GROUP }}"
          echo "Storage: ${{ env.TF_STATE_BLOB_ACCOUNT }}"
          echo "Container: ${{ env.TF_STATE_BLOB_CONTAINER }}"
          echo "vars: ${{ env.TF_VAR_FILE  }}"
          echo "state: ${{ env.TF_BLOB_FILE }}"
          echo "arm client: ${{ env.ARM_CLIENT_ID }}"
          echo "arm sub: ${{ env.ARM_SUBSCRIPTION_ID }}"
          echo "arm tenant: ${{ env.ARM_TENANT_ID }}"

  runapplytest:
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment }}
    if: ${{ inputs.run_apply }}
    env:
      ARM_CLIENT_ID: "${{ vars.ARM_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ vars.ARM_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ vars.ARM_TENANT_ID }}"
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true
    steps:
      - name: Echo Env Vars for apply
        run: |
          echo "arm client: ${{ env.ARM_CLIENT_ID }}"
          echo "arm sub: ${{ env.ARM_SUBSCRIPTION_ID }}"
          echo "arm tenant: ${{ env.ARM_TENANT_ID }}"
      - name: Echo Env Vars for apply
        run: |
          echo "arm client: ${{ vars.ARM_CLIENT_ID }}"
          echo "arm sub: ${{ vars.ARM_SUBSCRIPTION_ID }}"
          echo "arm tenant: ${{ vars.ARM_TENANT_ID }}"